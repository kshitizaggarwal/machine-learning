#importing libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#importing the dataset
data_set = pd.read_csv("california_housing_train.csv")

#taking X and Y_actual 
X = data_set.iloc[:,3:4].values
Y_actual = data_set.iloc[:,8:9].values

#plotting scatter plot to visualize the data
plt.scatter(X,Y_actual)

#functions

#line function
def line(m,x,c):
    return (m * x) + c

#error function
def error(Y_pred, Y_act):
    return np.mean(( Y_pred - Y_act ) ** 2)

# derivative for m/slope
def derivative_for_m(x, Y_pred, Y_act):
    return np.mean(2 * ( Y_pred - Y_act) * x)

# derivative for c/intercept
def derivative_for_c(Y_pred, Y_act):
    return np.mean(2 * ( Y_pred - Y_act))

#user defined vairables
m = np.random.random()      #slope
c = np.random.random()      #intercept
alpha = 0.0000000009        #learning rate
iterations = 55             #no.of steps

errors = []
#training the dataset
for i in range(iterations):
    Y_pred = line(m,X,c)
    errors.append(error(Y_pred, Y_actual))
    m = m - alpha * derivative_for_m(X, Y_pred, Y_actual)
    c = c - alpha * derivative_for_c(Y_pred, Y_actual)

#plotting the data
plt.plot(errors)
    
